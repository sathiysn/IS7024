@page
@using Newtonsoft.Json
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="card text-center text-light bg-dark">
    <div class="card-body">
        <h1 class="display-4">Welcome to HealthWatch 360</h1>
        <p class="lead">Your ultimate health and wellness companion. Track your health, stay informed, and live better!</p>
    </div>
</div>

<!-- Health Summary -->
<div class="card bg-dark text-light mb-4">
    <div class="card-body">
        <h5 class="text-center">Health Summary</h5>

        <!-- Input Form for User Data -->
        <form id="healthForm" class="text-center">
            <div class="row mb-3">
                <div class="col">
                    <label for="age" class="form-label">Age</label>
                    <input type="number" id="age" class="form-control" placeholder="Age" min="0" required>
                </div>
                <div class="col">
                    <label for="gender" class="form-label">Gender</label>
                    <select id="gender" class="form-select" required>
                        <option value="" disabled selected>Select</option>
                        <option value="Male">Male</option>
                        <option value="Female">Female</option>
                    </select>
                </div>
            </div>

            <div class="row mb-3">
                <label for="height" class="form-label">Height (Feet/Inches)</label>
                <div class="col">
                    <input type="number" id="heightFeet" class="form-control" placeholder="Feet" min="0" required>
                </div>
                <div class="col">
                    <input type="number" id="heightInches" class="form-control" placeholder="Inches" min="0" max="11" required>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col">
                    <label for="weight" class="form-label">Weight</label>
                    <input type="number" id="weight" class="form-control" placeholder="Enter weight" min="0" required>
                </div>
                <div class="col">
                    <label for="weightUnit" class="form-label">Unit</label>
                    <select id="weightUnit" class="form-select">
                        <option value="kg">Kg</option>
                        <option value="lbs">Lbs</option>
                    </select>
                </div>
            </div>

            <button type="button" class="btn btn-primary" onclick="calculateBMI()">Calculate Your BMI</button>
        </form>

        <!-- Display Results -->
        <div id="healthSummary" class="mt-4">
            <!-- Display User's Name -->
            <h3 id="displayName"></h3>
            <p class="mb-0" id="displayWeight">Weight: N/A </p>
            <p class="mb-0" id="displayBMI">BMI: N/A</p>
        </div>
    </div>
</div>

<script>
    function calculateBMI() {
        // Get input values
        const firstName = document.getElementById("firstName").value;
        const lastName = document.getElementById("lastName").value;
        const email = document.getElementById("email").value;
        const weight = parseFloat(document.getElementById("weight").value);
        const weightUnit = document.getElementById("weightUnit").value;
        const heightFeet = parseFloat(document.getElementById("heightFeet").value);
        const heightInches = parseFloat(document.getElementById("heightInches").value);

        // Convert weight to kilograms if needed
        const weightInKg = weightUnit === "lbs" ? weight * 0.453592 : weight;

        // Convert height to meters (1 ft = 0.3048 m, 1 inch = 0.0254 m)
        const heightMeters = ((heightFeet * 0.3048) + (heightInches * 0.0254));

        // Calculate BMI (BMI = weight in kg / height in m^2)
        const bmi = weightInKg / (heightMeters * heightMeters);

        // Update the display values
        document.getElementById("displayName").innerText = `Hello, ${firstName} ${lastName}!`;
        document.getElementById("displayWeight").innerText = `Weight: ${weight} ${weightUnit}`;
        document.getElementById("displayBMI").innerText = `BMI: ${bmi.toFixed(2)}`;
    }
</script>

<!-- Nutrition Overview -->
<div class="card bg-dark text-light mb-4">
    <div class="card-body">
        <h5 class="text-center">Nutrition Overview</h5>
        
        <input type="text" id="foodSearch" placeholder="Search for food..." oninput="searchFoods()" />
        <ul id="searchResults" style="list-style-type: none; padding: 0; margin: 0;"></ul>
        
        <script>
            // Assuming you load your JSON data into this variable
            const foundationFoods = @Html.Raw(JsonConvert.SerializeObject(Model.Root.FoundationFoods));

            function searchFoods() {
                const searchQuery = document.getElementById('foodSearch').value.toLowerCase();
                const resultsContainer = document.getElementById('searchResults');
                resultsContainer.innerHTML = '';

                if (searchQuery) {
                    const matchingFoods = foundationFoods.filter(food =>
                        food.description.toLowerCase().includes(searchQuery)
                    );

                    matchingFoods.forEach(food => {
                        const li = document.createElement('li');
                        li.textContent = food.description;
                        li.onclick = () => selectFood(food);
                        resultsContainer.appendChild(li);
                    });
                }
            }

            function selectFood(food) {
                document.getElementById('foodSearch').value = food.description;
                document.getElementById('searchResults').innerHTML = '';
                console.log(`Selected food: ${food.description}, ID: ${food.fdcId}`);
                // You could also store the selected food in a hidden input or submit it to your backend here
            }
        </script>

        <!-- Added by Rhiannon -->
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

        <style>
            .chart-container {
                display: flex;
                justify-content: space-between;
                flex-wrap: wrap; /* Allows wrapping if screen size is small */
                gap: 20px; /* Spacing between charts */
                max-width: 100%;
            }

            .chart-item {
                width: 20%; /* Adjust the width as needed */
                min-width: 150px; /* Ensures a minimum size for smaller screens */
            }
        </style>           
        <!-- Canvas for the charts -->
        <div class="chart-container">
            <div class="chart-item"><canvas id="chart1"></canvas></div>
            <div class="chart-item"><canvas id="chart2"></canvas></div>
            <div class="chart-item"><canvas id="chart3"></canvas></div>
            <div class="chart-item"><canvas id="chart4"></canvas></div>
        </div>

        <script>
            // Data and configuration for the charts
            function createPieChart(ctx, data) {
                new Chart(ctx, {
                    type: 'doughnut', // 'doughnut' for a donut chart, 'pie' for a pie chart
                    data: {
                        labels: ['Consumed', 'Remaining'],
                        datasets: [{
                            data: data,
                            backgroundColor: ['#4CAF50', '#D3D3D3'], // Colors for segments
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'top'
                            }
                        },
                        cutout: '70%' // Optional for a donut chart effect
                    }
                });
            }

            // Sample data for each chart
            const dataSets = [
                [60, 40], // Chart 1 data (60% consumed, 40% remaining)
                [80, 20], // Chart 2 data
                [50, 50], // Chart 3 data
                [30, 70], // Chart 4 data
            ];

            // Initialize charts
            for (let i = 0; i < 4; i++) {
                const ctx = document.getElementById(`chart${i+1}`).getContext('2d');
                createPieChart(ctx, dataSets[i]);
            }
        </script>
        <!-- End of Added by Rhiannon -->

        <!-- Placeholder Pie Chart -->
        <div class="d-flex justify-content-center my-3">
            <div class="pie-chart"></div>
        </div>
        <small class="text-muted">Macronutrients and Micronutrients Balance</small>
    </div>
</div>

<!-- Activity Level -->
<div class="card bg-dark text-light mb-4">
    <div class="card-body">
        <h5 class="text-center">Activity Level</h5>
        <p>Steps Taken: 8000 steps</p>
        <p>Active Minutes: 45 min</p>
        <!-- Progress Bar -->
        <div class="progress">
            <div class="progress-bar" role="progressbar" style="width: 60%;" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100"></div>
        </div>
    </div>
</div>

<!-- Health Tips Carousel -->
<div class="card bg-dark text-light mb-4">
    <div class="card-body">
        <h5 class="text-center">Health Tips</h5>

        <!-- Carousel Start -->
        <div id="healthTipsCarousel" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-inner">
                <!-- Tip 1 -->
                <div class="carousel-item active">
                    <p class="text-center">1. Base your meals on higher fibre starchy carbohydrates</p>
                </div>
                <!-- Tip 2 -->
                <div class="carousel-item">
                    <p class="text-center">2. Eat lots of fruit and veg</p>
                </div>
                <!-- Tip 3 -->
                <div class="carousel-item">
                    <p class="text-center">3. Drink more Water, Stay Hydrated!</p>
                </div>
                <!-- Tip 4 -->
                <div class="carousel-item">
                    <p class="text-center">4. Cut down on saturated fat and sugar</p>
                </div>
                <!-- Tip 5 -->
                <div class="carousel-item">
                    <p class="text-center">5. Eat less salt: no more than 6g a day for adults</p>
                </div>
            </div>

            <!-- Carousel Controls -->
            <button class="carousel-control-prev" type="button" data-bs-target="#healthTipsCarousel" data-bs-slide="prev">
                <span class="carousel-control-prev-icon bg-dark" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#healthTipsCarousel" data-bs-slide="next">
                <span class="carousel-control-next-icon bg-dark" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
        <!-- Carousel End -->
    </div>
</div>

<!-- Include Bootstrap JS (Make sure this is included in your project) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
