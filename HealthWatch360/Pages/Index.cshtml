@page
@using Newtonsoft.Json
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}


<link rel="stylesheet" href="~/css/nutrition.css">

<div class="card text-center text-light bg-dark">
    <div class="card-body">
        <h1 class="display-4">Welcome to HealthWatch 360</h1>
        <p class="lead">Your ultimate health and wellness companion. Track your health, stay informed, and live better!</p>
    </div>
</div>

<!-- Health Summary -->
<div class="card bg-dark text-light mb-4">
    <div class="card-body">
        <h5 class="text-center">Health Summary</h5>

        <!-- Input Form for User Data -->
        <form id="healthForm" class="text-center">
            <button type="button" class="btn" onclick="calculateBMI()">Calculate Your BMI</button>
        </form>

        <!-- Display Results -->
        <div id="healthSummary" class="mt-4">
            <!-- Display User's Name -->
            <h3 id="displayName"></h3>
            <p class="mb-0" id="displayWeight">Weight: N/A </p>
            <p class="mb-0" id="displayBMI">BMI: N/A</p>
        </div>
    </div>
</div>

<script>
    function calculateBMI() {
        // Retrieve user information from localStorage
        const firstName = localStorage.getItem("firstName");
        const weight = localStorage.getItem("weight");
        const weightUnit = localStorage.getItem("weightUnit");
        const heightFeet = localStorage.getItem("heightFeet");
        const heightInches = localStorage.getItem("heightInches");

        // Validate the data
        if (!firstName || !weight || !weightUnit || !heightFeet || !heightInches) {
            alert("Please make sure your profile is complete and saved.");
            return;
        }

        // Ensure numerical values are parsed correctly
        const parsedWeight = parseFloat(weight);
        const parsedHeightFeet = parseFloat(heightFeet);
        const parsedHeightInches = parseFloat(heightInches);

        if (isNaN(parsedWeight) || isNaN(parsedHeightFeet) || isNaN(parsedHeightInches)) {
            alert("Invalid data: Please ensure weight and height are numeric.");
            return;
        }

        // Convert weight to kilograms if needed
        const weightInKg = weightUnit === "lbs" ? parsedWeight * 0.453592 : parsedWeight;

        // Convert height to meters
        const heightMeters = (parsedHeightFeet * 0.3048) + (parsedHeightInches * 0.0254);

        // Calculate BMI
        const bmi = weightInKg / (heightMeters * heightMeters);

        // Update the display values
        document.getElementById("displayName").innerText = `Hello, ${firstName}`;
        document.getElementById("displayWeight").innerText = `Weight: ${parsedWeight} ${weightUnit}`;
        document.getElementById("displayBMI").innerText = `BMI: ${bmi.toFixed(2)}`;
    }
</script>

<!-- Nutrition Overview -->
<div class="card bg-dark text-light mb-4">
    <div class="card-body">
        <h5 class="text-center">Nutrition Overview</h5>

        <!-- Pie Charts for Nutrition Info of Users -->
        <div class="chart-container">
            <div class="chart-item"><canvas id="chart1"></canvas></div>
            <div class="chart-item"><canvas id="chart2"></canvas></div>
            <div class="chart-item"><canvas id="chart3"></canvas></div>
            <div class="chart-item"><canvas id="chart4"></canvas></div>
        </div>

        <!-- Form for User Input (Now Below the Charts) -->
        <div class="form-container mt-4">
            <h6>Update Nutrition Data</h6>
            <label for="chartSelector">Select Chart:</label>
            <select id="chartSelector" class="form-select">
                <option value="chart1">Calories</option>
                <option value="chart2">Protein</option>
                <option value="chart3">Sodium</option>
                <option value="chart4">Sugar</option>
            </select>
            <label for="consumedInput">Consumed:</label>
            <input type="number" id="consumedInput" class="form-control" placeholder="Enter consumed value">
            <label for="totalInput">Total Allowed:</label>
            <input type="number" id="totalInput" class="form-control" placeholder="Enter total allowed value">
            <button class="btn mt-3" onclick="updateChart()">Update Chart</button>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

        <script>
            // Store chart instances for easy updates
            const charts = {};

            // Function to create a pie chart
            function createPieChart(canvasId, data, titleText) {
                const ctx = document.getElementById(canvasId).getContext('2d');
                const chart = new Chart(ctx, {
                    type: 'doughnut',
                    data: {
                        labels: ['Consumed', 'Remaining'],
                        datasets: [{
                            data: data,
                            backgroundColor: ['#11C5D9', '#D3D3D3'], // Keep this in JS for dynamic control
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'top',
                                labels: {
                                    font: {
                                        family: 'Arial, sans-serif',
                                        size: 14,
                                        weight: 'bold'
                                    },
                                    color: '#f2f3f4'
                                }
                            },
                            title: {
                                display: true,
                                text: titleText,
                                font: {
                                    family: 'Arial, sans-serif',
                                    size: 16,
                                },
                                color: '#f2f3f4'
                            }
                        },
                        cutout: '70%'
                    }
                });
                charts[canvasId] = chart; // Store the chart instance
            }

            // Create initial charts
            createPieChart('chart1', [75, 25], 'Calories');
            createPieChart('chart2', [50, 50], 'Protein');
            createPieChart('chart3', [30, 70], 'Sodium');
            createPieChart('chart4', [90, 10], 'Sugar');

            // Function to update the selected chart
            function updateChart() {
                const chartId = document.getElementById('chartSelector').value;
                const consumed = parseFloat(document.getElementById('consumedInput').value);
                const total = parseFloat(document.getElementById('totalInput').value);

                if (!isNaN(consumed) && !isNaN(total) && charts[chartId]) {
                    if (consumed > total) {
                        alert("Consumed value cannot exceed the total allowed value.");
                        return;
                    }

                    const remaining = total - consumed; // Calculate remaining value
                    charts[chartId].data.datasets[0].data = [consumed, remaining];
                    charts[chartId].update(); // Redraw the chart
                } else {
                    alert("Please enter valid numeric values for Consumed and Total Allowed.");
                }
            }
        </script>
    </div>
</div>

<!-- Activity Level -->
<div class="card bg-dark text-light mb-4">
    <div class="card-body">
        <h5 class="text-center">Activity Level</h5>
        <p>Steps Taken: 8000 steps</p>
        <p>Active Minutes: 45 min</p>
        <!-- Progress Bar -->
        <div class="progress">
            <div class="progress-bar" role="progressbar" style="width: 60%;" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100"></div>
        </div>
    </div>
</div>

<!-- Health Tips Carousel -->
<div class="card bg-dark text-light mb-4">
    <div class="card-body">
        <h5 class="text-center">Health Tips</h5>

        <!-- Carousel Start -->
        <div id="healthTipsCarousel" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-inner">
                <!-- Tip 1 -->
                <div class="carousel-item active">
                    <p class="text-center">1. Base your meals on higher fibre starchy carbohydrates</p>
                </div>
                <!-- Tip 2 -->
                <div class="carousel-item">
                    <p class="text-center">2. Eat lots of fruit and veg</p>
                </div>
                <!-- Tip 3 -->
                <div class="carousel-item">
                    <p class="text-center">3. Drink more Water, Stay Hydrated!</p>
                </div>
                <!-- Tip 4 -->
                <div class="carousel-item">
                    <p class="text-center">4. Cut down on saturated fat and sugar</p>
                </div>
                <!-- Tip 5 -->
                <div class="carousel-item">
                    <p class="text-center">5. Eat less salt: no more than 6g a day for adults</p>
                </div>
            </div>

            <!-- Carousel Controls -->
            <button class="carousel-control-prev" type="button" data-bs-target="#healthTipsCarousel" data-bs-slide="prev">
                <span class="carousel-control-prev-icon bg-dark" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#healthTipsCarousel" data-bs-slide="next">
                <span class="carousel-control-next-icon bg-dark" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
        <!-- Carousel End -->
    </div>
</div>

<!-- Include Bootstrap JS (Make sure this is included in your project) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
