@page
@model HealthWatch360.Pages.Userz.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>List of Users</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.User[0].FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].DOB)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].Weight)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].HeightFeet)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].HeightInches)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].StreetAddress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].ZipCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].State)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].City)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.User) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DOB)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Weight)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HeightFeet)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HeightInches)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Gender)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StreetAddress)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ZipCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.UserID">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.UserID">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.UserID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
<script>

    // Save user details to localStorage when the page loads
    document.addEventListener("DOMContentLoaded", function () {
        const weight = document.getElementById("userWeight").innerText.trim();
        const weightUnit = document.getElementById("weightUnit").innerText.trim();
        const heightFeet = document.getElementById("userHeightFeet").innerText.trim();
        const heightInches = document.getElementById("userHeightInches").innerText.trim();
        const gender = document.getElementById("userGender").innerText.trim();

        // Store data in localStorage
        localStorage.setItem("weight", weight);
        localStorage.setItem("weightUnit", "kg"); // Adjust as needed if you use different units
        localStorage.setItem("heightFeet", heightFeet);
        localStorage.setItem("heightInches", heightInches);
        localStorage.setItem("gender", gender);
    };
</script>