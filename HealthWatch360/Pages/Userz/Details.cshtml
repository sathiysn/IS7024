@page
@model HealthWatch360.Pages.Userz.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>User</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.User.FirstName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.User.FirstName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.User.LastName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.User.LastName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.User.Email)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.User.Email)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.User.DOB)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.User.DOB)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.User.Weight)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.User.Weight)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.User.HeightFeet)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.User.HeightFeet)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.User.HeightInches)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.User.HeightInches)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.User.Gender)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.User.Gender)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.User.StreetAddress)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.User.StreetAddress)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.User.ZipCode)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.User.ZipCode)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.User.State)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.User.State)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.User.City)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.User.City)
        </dd>
    </dl>
</div>
<div>
    <a asp-page="./Edit" asp-route-id="@Model.User.UserID">Edit</a> |
    <a asp-page="./Index">Back to List</a>
</div>

<script>
    // Save user details to localStorage when the page loads
    document.addEventListener("DOMContentLoaded", function () {
        const firstName = document.getElementById("userFirstName").innerText.trim();
        const lastName = document.getElementById("userLastName").innerText.trim();
        const weight = document.getElementById("userWeight").innerText.trim();
        const heightFeet = document.getElementById("userHeightFeet").innerText.trim();
        const heightInches = document.getElementById("userHeightInches").innerText.trim();
        const gender = document.getElementById("userGender").innerText.trim();

        // Store data in localStorage
        localStorage.setItem("firstName", firstName);
        localStorage.setItem("lastName", lastName);
        localStorage.setItem("weight", weight);
        localStorage.setItem("weightUnit"); // Adjust as needed if you use different units
        localStorage.setItem("heightFeet", heightFeet);
        localStorage.setItem("heightInches", heightInches);
        localStorage.setItem("gender", gender);
    });
</script>