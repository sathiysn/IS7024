// <auto-generated />
using System;
using HealthWatch360.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HealthWatch360.Migrations
{
    [DbContext(typeof(HealthWatch360Context))]
    [Migration("20241118170726_users_error_messages")]
    partial class users_error_messages
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HealthWatch360.Models.ExerciseLog", b =>
                {
                    b.Property<int>("ExerciseLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseLogId"));

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ExerciseLogId");

                    b.HasIndex("UserID");

                    b.ToTable("ExerciseLog");
                });

            modelBuilder.Entity("HealthWatch360.Models.HealthReport", b =>
                {
                    b.Property<int>("HealthReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HealthReportId"));

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("HealthReportId");

                    b.HasIndex("UserID");

                    b.ToTable("HealthReport");
                });

            modelBuilder.Entity("HealthWatch360.Models.NutritionLog", b =>
                {
                    b.Property<int>("NutritionLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NutritionLogId"));

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("NutritionLogId");

                    b.HasIndex("UserID");

                    b.ToTable("NutritionLog");
                });

            modelBuilder.Entity("HealthWatch360.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HeightFeet")
                        .HasColumnType("int");

                    b.Property<int?>("HeightInches")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("UserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("HealthWatch360.Models.ExerciseLog", b =>
                {
                    b.HasOne("HealthWatch360.Models.User", "User")
                        .WithMany("ExerciseLog")
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HealthWatch360.Models.HealthReport", b =>
                {
                    b.HasOne("HealthWatch360.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HealthWatch360.Models.NutritionLog", b =>
                {
                    b.HasOne("HealthWatch360.Models.User", "User")
                        .WithMany("NutritionLog")
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HealthWatch360.Models.User", b =>
                {
                    b.Navigation("ExerciseLog");

                    b.Navigation("NutritionLog");
                });
#pragma warning restore 612, 618
        }
    }
}
