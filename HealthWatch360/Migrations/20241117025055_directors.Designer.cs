// <auto-generated />
using System;
using HealthWatch360.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HealthWatch360.Migrations
{
    [DbContext(typeof(HealthWatch360Context))]
    [Migration("20241117025055_directors")]
    partial class directors
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HealthWatch360.Models.ExerciseLog", b =>
                {
                    b.Property<int>("ExerciseLogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseLogID"));

                    b.Property<int?>("CaloriesBurned")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Duration")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ExerciseLogID");

                    b.HasIndex("UserID");

                    b.ToTable("ExerciseLog");
                });

            modelBuilder.Entity("HealthWatch360.Models.Goal", b =>
                {
                    b.Property<int>("GoalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GoalID"));

                    b.Property<int?>("CurrentValue")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TargetValue")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("GoalID");

                    b.HasIndex("UserID");

                    b.ToTable("Goal");
                });

            modelBuilder.Entity("HealthWatch360.Models.HealthReport", b =>
                {
                    b.Property<int>("HealthReportID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HealthReportID"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GoalSummary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthDataSummary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecommmendationSummary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("HealthReportID");

                    b.HasIndex("UserID");

                    b.ToTable("HealthReport");
                });

            modelBuilder.Entity("HealthWatch360.Models.NutritionLog", b =>
                {
                    b.Property<int>("NutritionLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NutritionLogId"));

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("NutritionLogId");

                    b.HasIndex("UserID");

                    b.ToTable("NutritionLog");
                });

            modelBuilder.Entity("HealthWatch360.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LastName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("HealthWatch360.Models.ExerciseLog", b =>
                {
                    b.HasOne("HealthWatch360.Models.User", "User")
                        .WithMany("ExerciseLog")
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HealthWatch360.Models.Goal", b =>
                {
                    b.HasOne("HealthWatch360.Models.User", "User")
                        .WithMany("Goal")
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HealthWatch360.Models.HealthReport", b =>
                {
                    b.HasOne("HealthWatch360.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HealthWatch360.Models.NutritionLog", b =>
                {
                    b.HasOne("HealthWatch360.Models.User", "User")
                        .WithMany("NutritionLog")
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HealthWatch360.Models.User", b =>
                {
                    b.Navigation("ExerciseLog");

                    b.Navigation("Goal");

                    b.Navigation("NutritionLog");
                });
#pragma warning restore 612, 618
        }
    }
}
